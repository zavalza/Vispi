Illegal character ';' in line '5'
programa exitoso
{'main': 'void', 'Fibonacci': 'int', 'Vispi': 'prog'}


{'main': [0, 2, 0, 0, 0, 0, 1, 0, 0, 0], 'Fibonacci': [0, 1, 0, 0, 0, 3, 5, 0, 0, 0], 'Vispi': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}


{'main': 21, 'Fibonacci': 2, 'Vispi': 0}


{'main': [[], {'x': 'int', 'result': 'int', 'Temporal8': 'int'}, {'x': 2201, 'result': 2200, 'Temporal8': 3200}], 'Fibonacci': [['int'], {'n': 'int', 'Temporal7': 'int', 'Temporal6': 'int', 'Temporal5': 'int', 'Temporal4': 'int', 'Temporal3': 'int', 'Temporal2': 'bool', 'Temporal1': 'bool', 'Temporal0': 'bool'}, {'n': 2200, 'Temporal7': 3204, 'Temporal6': 3203, 'Temporal5': 3202, 'Temporal4': 3201, 'Temporal3': 3200, 'Temporal2': 3002, 'Temporal1': 3001, 'Temporal0': 3000}], 'Vispi': [[], {0: 'int', 1: 'int', 2: 'int', 5: 'int', 'imLoad': 'image', 'takePicture': 'image', 'imBW': 'image', 'Fibonacci': 'int', 'print': 'void', 'main': 'void', 'filterColor': 'image', 'imGray': 'image'}, {0: 1200, 1: 1201, 2: 1202, 5: 1203, 'imLoad': 800, 'takePicture': 801, 'imBW': 802, 'Fibonacci': 200, 'print': 900, 'main': 901, 'filterColor': 803, 'imGray': 804}]}




{0: ['GOTO', -1, 'main', -1], 1: ['CAM', 'webcam', -1, -1], 2: ['==', 2200, 1200, 3000], 3: ['==', 2200, 1201, 3001], 4: ['||', 3000, 3001, 3002], 5: ['GOTOF', 3002, 'if', 8], 6: ['RETURN', 2200, -1, 200], 7: ['GOTO', -1, 'else', 20], 8: ['ERA', 'Fibonacci', -1, -1], 9: ['-', 2200, 1201, 3200], 10: ['PARAM', 3200, -1, 0], 11: ['GOSUB', 2, -1, -1], 12: ['=', 200, -1, 3201], 13: ['ERA', 'Fibonacci', -1, -1], 14: ['-', 2200, 1202, 3202], 15: ['PARAM', 3202, -1, 0], 16: ['GOSUB', 2, -1, -1], 17: ['=', 200, -1, 3203], 18: ['+', 3201, 3203, 3204], 19: ['RETURN', 3204, -1, 200], 20: ['RET', -1, -1, -1], 21: ['=', 1203, -1, 2201], 22: ['ERA', 'Fibonacci', -1, -1], 23: ['PARAM', 2201, -1, 0], 24: ['GOSUB', 2, -1, -1], 25: ['=', 200, -1, 3200], 26: ['=', 3200, -1, 2200], 27: ['ERA', 'print', -1, -1], 28: ['PARAM', 2200, -1, 0], 29: ['CALL', 'print', -1, -1], 30: ['RET', -1, -1, -1], 31: ['ENDPROC', -1, -1, -1]}


operatorsStack
[]


operandsStack
[]


typesStack
[]


branchStack
[]


0
1000
[0, 200, 400, 600, 800, 900]
[199, 399, 599, 799, 899, 999]
{0: 'Vispi', 2: 'Fibonacci', 21: 'main'}
{800: 'imLoad', 801: 'takePicture', 802: 'imBW', 803: 'filterColor', 900: 'print', 901: 'main', 200: 'Fibonacci', 1200: 'CpEHs', 1201: 'uqjdN', 1202: 'atcCN', 1203: 'zhDLx', 804: 'imGray'}
[['GOTO', -1, 'main', -1], ['CAM', 'webcam', -1, -1], ['==', 2200, 1200, 3000], ['==', 2200, 1201, 3001], ['||', 3000, 3001, 3002], ['GOTOF', 3002, 'if', 8], ['RETURN', 2200, -1, 200], ['GOTO', -1, 'else', 20], ['ERA', 'Fibonacci', -1, -1], ['-', 2200, 1201, 3200], ['PARAM', 3200, -1, 0], ['GOSUB', 2, -1, -1], ['=', 200, -1, 3201], ['ERA', 'Fibonacci', -1, -1], ['-', 2200, 1202, 3202], ['PARAM', 3202, -1, 0], ['GOSUB', 2, -1, -1], ['=', 200, -1, 3203], ['+', 3201, 3203, 3204], ['RETURN', 3204, -1, 200], ['RET', -1, -1, -1], ['=', 1203, -1, 2201], ['ERA', 'Fibonacci', -1, -1], ['PARAM', 2201, -1, 0], ['GOSUB', 2, -1, -1], ['=', 200, -1, 3200], ['=', 3200, -1, 2200], ['ERA', 'print', -1, -1], ['PARAM', 2200, -1, 0], ['CALL', 'print', -1, -1], ['RET', -1, -1, -1], ['ENDPROC', -1, -1, -1]]
